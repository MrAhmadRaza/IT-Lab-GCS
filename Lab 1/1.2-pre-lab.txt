We will cover some basic terms of a C++ program in this session, which would help us in coming problems:

-------------------------
Structure of C++ program
-------------------------
#include<iostream>;

using namespace std;

void main()
{
    //Program Body
}
*Most of the C++ Programs start with #include <iostream>
    -iostream: is a header file which contains certain built in functions. Mostly used for cout, cin and cerr. In all the above             mentioned functions c stands for console. So cout is console output, cin is console input.

    -Header Files: in C++ Header files contain definitions of Functions and Variables, which is imported or used into any C++ program by        using the pre-processor #include statement.

    -pre-processor: programs provides preprocessors directives/instruction which tell the compiler to preprocess the source code before       compiling. All of these preprocessor directive begins with a '#' (hash) symbol.

*using namespace std;
    -a namespace is designed to overcome the difficulty in having same name and is used as additional information to differentiate            similar functions, variables etc. eg. std::cout<<""; and int cout = 5;
*main()
    -Every C++ program starts with main(), which is called the main function, entry point of program.

* //
    -The // character is used at the beginning of a single line comment.
-----------------------------
Escape characters in a string
-----------------------------
\n: new line
\t: tab, tab stops every 8th character
\a: alarm/beep
\r: return the cursor to the first character in the same line.

-------------------------------
Arithmatic Operations in C++
-------------------------------
C++ Operation           C++ arith. Operator     Algebric expression         C++ Expression
Addition                    +                       a + 7                       a + 7
Subtraction                 -                       b - 8                       b - 8
Multiplication              *                       ab or a.b or axb            a * b
Division                    /                       x/y or other                x / y
Modulus                     %                       r mod s                     r % s

------------------------------------------
Precedence of arithmatic operations in C++
------------------------------------------
Operator        Operation                       Order of Evaluation
()              Parentheses         Evaluated first. The expression in the innermost pair is evaluated first. (a + b) * (c - d) -->                                         parenthesis appear in same level, not any order is specified in C++ in such situation. Moreover,                                         order does not matter in such situation.
*, /, %         Multiplication      Evaluated second, If there are several, they are evaluated left to right.
                Division, Modulus
+, -            Addition,           Evaluated last, If there are several, they are evaluated left to right.
                Subtraction

--------------------------------------------------
Decision Making: Equality and Relational Operators
--------------------------------------------------
Standard operator           C++ operator               Sample                   Explanation
Relational opeators
>                                >                      a > b                   a is grater than b
<                                <                      a < b                   a is less than b
≥	                             >=                     a >= b                  a is grater or equal to b
≤	                             <=                     a <= b                  a is less or equal to b
Equality Operators
=                                 ==                    a == b                  a is equal to b
≠	                              !=                    a != b                  a is not equal to b
---------------------------------------------------
if statement
---------------------------------------------------
Codition: 
    -Expression can be true or false
    -Can be formed using equality and relational operator
if statement:
    -if the condition is true, the body of if statement excutes.
    -if the condition is false, the body of the if statement does not executes
if ( condition)
{
    Statement(s)
    
}
